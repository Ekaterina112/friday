{"version":3,"sources":["n1-main/m1-ui/common/container/container.module.css","n2-features/f3-404/error404.module.css","n2-features/f0-test/test.module.css","n1-main/m1-ui/common/c1-InputText/UniversalnputText.module.css","n1-main/m1-ui/common/c3-Checkbox/UniversalCheckbox.module.css","n1-main/m1-ui/common/c2-Button/UniversalButton.module.css","n1-main/m1-ui/header/header.module.css","n2-features/f2-profile/profile.module.css","n2-features/f1-auth/a2-register/register.module.css","n2-features/f1-auth/a3-recoveryPassword/recovery.module.css","n2-features/f1-auth/a4-newPassword/newPassword.module.css","n1-main/m1-ui/routes/routes.module.css","n2-features/f3-404/error404.tsx","n2-features/f2-profile/profile.tsx","n1-main/m1-ui/common/c1-InputText/UniversalInputText.tsx","n1-main/m1-ui/common/c3-Checkbox/UniversalCheckbox.tsx","n1-main/m1-ui/common/c2-Button/UniversalButton.tsx","n2-features/f1-auth/a1-login/api-login.ts","n2-features/f1-auth/a1-login/login-reducer.ts","n2-features/f1-auth/a1-login/login.tsx","n2-features/f1-auth/a2-register/register.tsx","n2-features/f1-auth/a3-recoveryPassword/recovery.tsx","n1-main/m3-dal/api.ts","n2-features/f0-test/test_back.tsx","n2-features/f0-test/test.tsx","n2-features/f1-auth/a4-newPassword/newPassword.tsx","n1-main/m1-ui/routes/routes.tsx","n1-main/m1-ui/header/header.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m1-bll/store.ts","index.tsx"],"names":["module","exports","ErrorPage","className","s","errorPage","firstP","secondP","thirdP","item","to","PATH","PROFILE","activeClassName","activeLink","ProfilePage","stylesContainer","container","profilePage","UniversalInputText","value","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","key","UniversalCheckbox","onChangeChecked","children","checkbox","checked","UniversalButton","red","finalClassName","default","instance","axios","create","withCredentials","baseURL","authAPI","email","password","rememberMe","post","initialState","user","isAuth","LoginPage","dispatch","useDispatch","useSelector","state","login","useState","setEmail","setPassword","setRememberMe","loginForm","placeholder","onClick","console","log","then","response","data","payload","catch","message","getAuthUserData","RegistrationPage","registerPage","RecoveryPage","recoveryPage","TestBack","Date","now","time","setTime","ping","setPing","useEffect","get","getTimeAPI","toString","res","TestPage","testPage","NewPasswordPage","newPassPage","LOGIN","REGISTRATION","RECOVERY_PASSWORD","NEW_PASSWORD","TEST","Routes","routes","path","exact","render","Header","header","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ddbcd030.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2aAJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPage\":\"error404_errorPage__sO9f1\",\"firstP\":\"error404_firstP__vVYu0\",\"secondP\":\"error404_secondP__1kEVz\",\"thirdP\":\"error404_thirdP__srKqH\",\"item\":\"error404_item__2VjWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testPage\":\"test_testPage__11-8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"UniversalnputText_superInput__12cAt\",\"errorInput\":\"UniversalnputText_errorInput__11tpF\",\"error\":\"UniversalnputText_error__1veDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"UniversalCheckbox_checkbox__nF0fC\",\"spanClassName\":\"UniversalCheckbox_spanClassName__32SU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"UniversalButton_default__3LrQP\",\"red\":\"UniversalButton_red__1__ft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1qHKo\",\"item\":\"header_item__2vat2\",\"activeLink\":\"header_activeLink__1DHZV\",\"logo\":\"header_logo__2Hbua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"profile_profilePage__1t0zH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"register_registerPage__MxyIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryPage\":\"recovery_recoveryPage__1oepn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassPage\":\"newPassword_newPassPage__P5-po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"routes_routes__1oUyd\"};","import React from 'react';\r\nimport s from './error404.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../n1-main/m1-ui/routes/routes';\r\n\r\n\r\nfunction ErrorPage() {\r\n    return (<div className={s.errorPage}>\r\n          <h1>404</h1>\r\n            <p className={s.firstP}>Page not found</p>\r\n            <p className={s.secondP}>Sorry, but the page you were looking for doesn’t exist.</p>\r\n            <p className={s.thirdP}>Go back to\r\n                  <span className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\nimport s from './profile.module.css'\r\nimport stylesContainer from './../../../src/n1-main/m1-ui/common/container/container.module.css'\r\n\r\n\r\nfunction ProfilePage() {\r\n\r\n    return (<div className={`${stylesContainer.container} ${s.profilePage}`}>\r\n            <h2>Your profile</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./UniversalnputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst UniversalInputText: React.FC<SuperInputTextPropsType> = (\n    { value,\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName=`${error ? s.errorInput:s.superInput} ${className ? className:\"\"}`\n\n    return (\n        <>\n            <input\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                type={type}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default UniversalInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./UniversalCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst UniversalCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked ???????????????????????\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default UniversalCheckbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./UniversalButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst UniversalButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n            <button\n                className={finalClassName}\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n            />\n    );\n}\n\nexport default UniversalButton;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n        //.data\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n//types\r\nexport type nameType = {}\r\n\r\n","import {authAPI} from './api-login';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\n//type InitialStateType = typeof initialState\r\ntype InitialStateType = {\r\n    user: UserDataType | {},\r\n    isAuth: boolean\r\n}\r\ntype UserDataType = {\r\n    _id: string | null,\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean\r\n}\r\nconst initialState = {\r\n    user: {},\r\n    isAuth: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error:(e.message+\", more details in the console\")\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserDataAC>\r\n\r\ntype ActionsType =\r\n    |  setAuthUserDataType","import React, {useState} from 'react';\r\nimport stylesContainer from '../../../n1-main/m1-ui/common/container/container.module.css';\r\nimport s from '../../f0-test/test.module.css';\r\nimport UniversalInputText from '../../../n1-main/m1-ui/common/c1-InputText/UniversalInputText';\r\nimport UniversalCheckbox from '../../../n1-main/m1-ui/common/c3-Checkbox/UniversalCheckbox';\r\nimport UniversalButton from '../../../n1-main/m1-ui/common/c2-Button/UniversalButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getAuthUserData} from './login-reducer';\r\nimport {AppRootStateType} from '../../../n1-main/m1-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nfunction LoginPage() {\r\n    const dispatch = useDispatch()\r\n    let isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    let [email, setEmail] = useState<string>('')\r\n    let [password, setPassword] = useState<string>('')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    let onclickHandler = () => {\r\n        console.log(email, password, rememberMe)\r\n        dispatch(getAuthUserData(email, password, rememberMe))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (<div className={`${stylesContainer.container} ${s.loginForm}`}>\r\n            <h4>SIGN IN</h4>\r\n            <UniversalInputText type={'email'}\r\n                                placeholder={'Enter email'}\r\n                                onChangeText={setEmail}/>\r\n            <UniversalInputText type={'password'}\r\n                                placeholder={'Password'}\r\n                                onChangeText={setPassword}/>\r\n            <UniversalCheckbox onChangeChecked={setRememberMe}>Remember me</UniversalCheckbox>\r\n            <UniversalButton onClick={onclickHandler}>Submit</UniversalButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport s from './register.module.css'\r\nimport stylesContainer from './../../../n1-main/m1-ui/common/container/container.module.css';\r\n\r\n\r\nfunction RegistrationPage() {\r\n    return (<div className={`${stylesContainer.container} ${s.registerPage}`} >\r\n            <h2>Register here</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistrationPage;\r\n","import React from 'react';\r\nimport stylesContainer from './../../../n1-main/m1-ui/common/container/container.module.css';\r\nimport s from './recovery.module.css'\r\n\r\n\r\nfunction RecoveryPage() {\r\n    return ( <div className={`${stylesContainer.container} ${s.recoveryPage}`}>\r\n            <h2>Recovery password here</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecoveryPage;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n})\r\n\r\n\r\nexport const getTimeAPI = (time: string) => {\r\n    return instance.get(`ping?frontTime=${time}`)\r\n}\r\n\r\n\r\n//types\r\nexport type nameType = {}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {getTimeAPI} from '../../n1-main/m3-dal/api';\r\n\r\n\r\n\r\ntype TestBackType = {}\r\n\r\nconst TestBack: React.FC<TestBackType> = () => {\r\n    const [time, setTime] = useState(Date.now())\r\n    const [ping, setPing] = useState(0)\r\n\r\n    useEffect(() => {\r\n        getTimeAPI(time.toString())\r\n            .then(res => {\r\n                console.log(res)\r\n                setTime(time)\r\n                setPing(res.data.ping)\r\n            })\r\n    }, [time])\r\n\r\n    return <div>\r\n        <p>Test Time Request : {time}</p>\r\n        <p>Test Ping Request : {ping}</p>\r\n    </div>\r\n};\r\n\r\n\r\n\r\nexport default TestBack;","import React from 'react';\r\nimport UniversalInputText from '../../n1-main/m1-ui/common/c1-InputText/UniversalInputText';\r\nimport UniversalButton from '../../n1-main/m1-ui/common/c2-Button/UniversalButton';\r\nimport UniversalCheckbox from '../../n1-main/m1-ui/common/c3-Checkbox/UniversalCheckbox';\r\nimport s from './test.module.css'\r\nimport stylesContainer from './../../../src/n1-main/m1-ui/common/container/container.module.css'\r\nimport TestBack from './test_back';\r\n\r\nfunction TestPage() {\r\n    return (<div className={`${stylesContainer.container} ${s.testPage}`}>\r\n            <UniversalInputText placeholder={'Write here'}/>\r\n            <UniversalCheckbox> check </UniversalCheckbox>\r\n            <UniversalButton>submit</UniversalButton>\r\n            <TestBack/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestPage;\r\n","import React from 'react';\r\nimport s from './newPassword.module.css'\r\nimport stylesContainer from './../../../n1-main/m1-ui/common/container/container.module.css';\r\n\r\nfunction NewPasswordPage() {\r\n    return (<div className={`${stylesContainer.container} ${s.newPassPage}`}>\r\n            <h2>new password you can create here</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPasswordPage;\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport ErrorPage from '../../../n2-features/f3-404/error404';\r\nimport ProfilePage from '../../../n2-features/f2-profile/profile';\r\nimport LoginPage from '../../../n2-features/f1-auth/a1-login/login';\r\nimport RegistrationPage from '../../../n2-features/f1-auth/a2-register/register';\r\nimport RecoveryPage from '../../../n2-features/f1-auth/a3-recoveryPassword/recovery';\r\nimport TestPage from '../../../n2-features/f0-test/test';\r\nimport NewPasswordPage from '../../../n2-features/f1-auth/a4-newPassword/newPassword';\r\nimport s from './routes.module.css'\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    RECOVERY_PASSWORD: '/recoveryPassword',\r\n    NEW_PASSWORD: '/newPassword',\r\n    PROFILE: '/profile',\r\n    TEST: '/test'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div className={s.routes}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <LoginPage/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationPage/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPage/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordPage/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\r\n                <Route path={PATH.TEST} render={() => <TestPage/>}/>\r\n                <Route render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport s from './header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../routes/routes';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.logo}>\r\n                Study Point\r\n                <span>.</span>\r\n            </div>\r\n\r\n\r\n                <nav>\r\n               <span className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n                    <span className={s.item}>\r\n                    <NavLink to={PATH.TEST} activeClassName={s.activeLink}>TEST PAGE</NavLink>\r\n                </span>\r\n                    <span className={s.item}>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}> SIGN IN </NavLink>\r\n                </span>\r\n                    <span className={s.item}>\r\n                    <NavLink to={PATH.REGISTRATION} activeClassName={s.activeLink}> SIGN UP </NavLink>\r\n                </span>\r\n                    <span className={s.item}>\r\n                    <NavLink to={PATH.RECOVERY_PASSWORD} activeClassName={s.activeLink}> RECOVERY PASSWORD </NavLink>\r\n                </span>\r\n                    <span className={s.item}>\r\n                    <NavLink to={PATH.NEW_PASSWORD} activeClassName={s.activeLink}> CHANGE PASSWORD </NavLink>\r\n                </span>\r\n                </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Routes from './routes/routes';\nimport Header from './header/header';\n\n\nfunction App() {\n    return (<div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {loginReducer} from '../../n2-features/f1-auth/a1-login/login-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// you can access the store at any time in the browser console\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './n1-main/m1-bll/store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}